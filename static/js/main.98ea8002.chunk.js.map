{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","SearchPanel","state","term","onSearchChange","e","target","value","setState","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","required","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","newArray","slice","console","log","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98ea8002.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>My Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted,\r\n            onToggleImportant,\r\n            onToggleDone,\r\n            important, done} = this.props;\r\n        \r\n        let classNames = 'todo-list-item';\r\n        if (done) {\r\n            classNames += ' done';\r\n        };\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        };\r\n\r\n        \r\n        return (\r\n        <span className={classNames}>\r\n            <span \r\n                className=\"todo-list-item-label\"\r\n                //style={style}\r\n                onClick={ onToggleDone } >\r\n                { label }\r\n            </span>\r\n            \r\n            <button type=\"button\"\r\n                className=\"btn btn-outline-success btn-sm float-right\"\r\n                onClick={onToggleImportant}>\r\n                <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n            \r\n            <button type=\"button\"\r\n                className=\"btn btn-outline-danger btn-sm float-right\"\r\n                onClick={onDeleted}>\r\n                <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n        </span>\r\n        );\r\n\r\n    }\r\n}\r\n// function-based component\r\n/*const TodoListItemFunc = ({ label, important = false }) => {\r\n    \r\n    const style = {\r\n        color: important ? 'steelblue': 'black',\r\n        fontWeight: important ? 'bold' : 'normal'\r\n    };\r\n\r\n    return (\r\n    <span className=\"todo-list-item\">\r\n        <span \r\n            className=\"todo-list-item-label\"\r\n            style={style}>\r\n            { label }\r\n        </span>\r\n        \r\n        <button type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n        \r\n        <button type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n    </span>\r\n    );\r\n};*/\r\n\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                    onToggleImportant,\r\n                    onToggleDone }) => {\r\n    \r\n    const elements =  todos.map((item) => {\r\n\r\n        const { id, ...itemProps } = item;\r\n\r\n        return ( \r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                { ...itemProps } \r\n                onDeleted={() => onDeleted(id)}\r\n                onToggleImportant={()=> onToggleImportant(id)}\r\n                onToggleDone={()=> onToggleDone(id)}\r\n                /> {/*if you want to pass all the attributes : {...item }*/}\r\n            </li>\r\n        );   \r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-group todo-list\" >\r\n            { elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends Component {\r\n\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onSearchChange(term);\r\n    };\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\" \r\n                value={this.state.term} \r\n                onChange = {this.onSearchChange}/>\r\n            \r\n        );\r\n    }; \r\n};\r\n\r\nexport default SearchPanel;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        { name: 'all', label: 'All'},\r\n        { name: 'active', label: 'Active'},\r\n        { name: 'important', label: 'Important'},\r\n        { name: 'done', label: 'Done'}\r\n    ];\r\n\r\n    render() {\r\n        const { filter, onFilterChange } = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterChange(name)}>\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nclass ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: \"\"\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        // capitalize every word ?\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label)\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit={this.onSubmit}>          \r\n                <input type=\"text\" \r\n                        className=\"form-control\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\" \r\n                        value={this.state.label} required/>\r\n                <button className=\"btn btn-outline-secondary\">\r\n                    Add Item\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemAddForm;","import App from './app';\r\n\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData : [\r\n            this.createTodoItem('Drink Coffee'),\r\n            this.createTodoItem('Make App'),\r\n            this.createTodoItem('Have a lunch')           \r\n        ],\r\n        term: '',\r\n        filter: 'all' // active, all, done\r\n    };\r\n\r\n    createTodoItem(label ) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        //console.log(id);\r\n        this.setState(({ todoData }) => {\r\n            const idx = todoData.findIndex((el) => el.id === id);\r\n            // todoData.splice(idx, 1); //to change state is not allowed \r\n           \r\n        // [a,b,c,d,e]\r\n        // [a,b,  d,e]\r\n\r\n            const newArray = [\r\n                ...todoData.slice(0, idx),\r\n                ...todoData.slice(idx+1)\r\n            ];\r\n            console.log(newArray);\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        \r\n        const newItem = this.createTodoItem(text);\r\n\r\n        // add element in array\r\n        this.setState(({todoData}) => {\r\n            const newArray = [\r\n                ...todoData,\r\n                newItem\r\n            ];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const idx = arr.findIndex((el) => el.id === id);\r\n        \r\n        const oldItem = arr[idx];\r\n        const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n        return [\r\n            ...arr.slice(0, idx),\r\n            newItem,\r\n            ...arr.slice(idx + 1)\r\n        ];\r\n    }\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'important')\r\n            };\r\n        }); \r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            return {\r\n                todoData: this.toggleProperty(todoData, id, 'done')\r\n            };\r\n        }); \r\n    };\r\n    \r\n    onSearchChange = ( term ) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    onFilterChange = ( filter ) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase()\r\n            .indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    }\r\n\r\n    filter(items, filter) {\r\n        switch(filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n            case 'important':\r\n                return items.filter((item) => item.important);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render () {\r\n\r\n        const { todoData, term, filter } = this.state;\r\n        \r\n        const visibleItems = this.filter(\r\n            this.search(todoData, term), filter);\r\n        const doneCount = todoData.filter((el)=> el.done).length;\r\n        const important = todoData.filter((el)=>el.important);\r\n        console.log(important);\r\n        const todoCount = todoData.length - doneCount;\r\n        return (\r\n            <div className=\"todo-app\">\r\n                {/*<p>{ (new Date()).toString() }</p>\r\n                <p>{ isLoggedIn ? welcomeBox : loginBox }</p>*/}\r\n                {/*{ value } */}\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange} />\r\n                    <ItemStatusFilter \r\n                    filter={filter}\r\n                    onFilterChange={this.onFilterChange} />\r\n                </div>\r\n                <TodoList\r\n                 todos={ visibleItems }\r\n                 onDeleted={ this.deleteItem }\r\n                 onToggleImportant={this.onToggleImportant}\r\n                 onToggleDone={this.onToggleDone} />\r\n                <ItemAddForm onItemAdded={this.addItem} />\r\n            </div>\r\n        );\r\n    }\r\n       \r\n    \r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}